###################################
# ticrypt-rest Configuration File #
###################################

ticrypt.rest { 
	## Port and interface to which to bind the HTTP server
	#http.host = "localhost"
	#http.port = 8080

	## Amount of time to wait for requests to the backend servers to complete
	## before timing out
	#backend-timeout = 2m

	## Allowed CORS origins.
	## Empty = all origins
	#allowed-origins = [ ]

	## IP ranges that are considered "internal", specified in address/netmask
	## format.
	## Example: "192.168.122.0/24"
	#vm.internal-networks = []

	## Sets the host interface upon which the service listen for connections
	## from the other services. 
	#akka.remote.artery.canonical.hostname = "127.0.0.1"

	## Sets the port used for remote connections to other services.
	#akka.remote.artery.canonical.port = 2553

  ## If on, all JSON request bodies are scanned for HTML and other illegal
  ## structures that could be used to perform reflection attacks.
  #validation.request-json = on

  ## If on, all JSON responses are scanned for HTML and other illegal
  ## structures that could be used to perform reflection attacks. This can
  ## prevent this information from being served to the client even if the
  ## database is compromised.
  #validation.response-json = on

  ## Whether to search the raw cookie header for the session cookie if not found normally.
  ## The HTTP server library will not parse a "Cookie" header that contains
  ## cookies with invalid syntax (e.g., whitespace in the cookie value, etc).
  ## Thus, if one or more invalid cookies are sent as part of the request, the
  ## session cookie will not be recognized, even if that cookie is valid.
  ##
  ## As a workaround, this option may be turned on, which will cause the raw
  ## Cookie header to be searched as a fallback, if the cookie is not found
  ## normally. This adds a small amount of overhead to requests that don't
  ## use cookies to specify sessions, but allows the session cookie to be found
  ## even in cases where invalid cookies are included in the request.
  #session.search-raw-header = false
}

ticrypt.auth {
	## Sets the hostname, and port used by the Authentication
	## service. Must be set properly for proper communcation with the
	## authentication service.
	#hostname = "127.0.0.1"
	#port = 2552
}

akka.http.server {
	parsing {
		# Should be set to at least 50% more than the chunk size configured
		# for the file management service
		max-content-length = 16 MiB
	}

	# The length of time the backend has to respond to a request
	request-timeout = 20 minutes

	# The length of time before an idle connection will be closed. Should be
	# longer than request-timeout
	idle-timeout = 25 minutes

	# Defines the number of requests that can be processed in parallel.
	#pipelining-limit = 16
}

akka.http.client.idle-timeout = 25 minutes