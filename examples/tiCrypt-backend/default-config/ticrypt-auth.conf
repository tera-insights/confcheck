###################################
# ticrypt-auth Configuration File #
###################################

ticrypt.auth {

  mongodb {
    ## The name of the database in which data will be stored.
    #database = "ticrypt-auth"

    ## You may EITHER specify the uri OR the components
    ## If specified, the URI will be used instead of the components

    #uri = "mongodb://user:password@localhost:27017/${database}"

    #hostname = "localhost"
    #port = 27017
    #user = "user"
    #password = "password"
  }

  users {
    ## Whether or not users are allowed to register inactive accounts for
    ## themselves.
    #allow-self-registration = on

    ## Token used to bootstrap the first user and, if self registration
    ## is enabled, allow new users to create their own (inactive) account.
    #self-registration-token = "m)%qnDd]p0dF-CDOZ!a&#m10<D*1jjq_RDFhO'D4"

    ## Message shown to the user if they attempt to log in using an account
    ## that has not yet been activated.
    #self-registration-reason = "Account disabled pending administrator approval."

    ## Default permissions for new users.
    ## Values prefixed with an @ are interpreted as groups of permissions.
    ## Valid permission groups are:
    ##   - session            Session creation, REQUIRED FOR LOGIN
    ##   - admin              User administration
    ##   - group              Group creation and management
    ##   - file               File creation, upload, download, and sharing
    ##   - directory          Directory creation and management
    ##   - mailbox            Mailbox creation
    #default-permissions = [ "@group", "@file", "@directory", "@session" ]
  }

  sessions {
    ## Note: TTL = Time To Live

    ## Sets the default amount of time that a session will remain active
    ## without being used.
    #session-idle-ttl = 30 minutes

    ## Sets the amount of time that a client has to respond to a session
    ## challenge

    #challenge-ttl = 10 minutes

    ## The amount of time a temporary session created by a signed message
    ## is valid.
    #temporary-ttl = 10 minutes

    ## The maximum TTL for sub-sessions.
    #subsession-max-ttl = 30 minutes

    ## Permissions that will be stripped from all sessions, useful for
    ## blanket disabling functionality. Supports the same syntax as
    ## users.default-permissions.
    #banned-permissions = [ "@mailbox" ]
  }

  mfa {
    ## Used in generation of authentication tokens to introduce variance
    #* between installations. This should be set to a string of random
    ## characters to properly salt the hash.
    #token-salt = "some random string"

    ## Number of additional authentication factors required for
    ## successful login. 0 means MFA is disabled.
    #num-factors-required = 0

    ## Whether MFA is required for registration if num-factors-required > 0
    #required-for-registration = true

    ## Which of the factors configured in the 'factors' configuration
    ## below are enabled
    #enabled-factors = []

    ## Default lifetime of an authentication token if not overriden
    ## in the provider configuration
    #default-token-ttl = 2 days

    ## Default lifetime of a provider-generated certificate if not
    ## overriden in the configuration.
    #default-cert-ttl = 30 minutes

    factors {
      ## Example MFA provider
      example-factor {
        ## Path to the public key, in PEM or DER format
        public-key = "/paht/to/public/key.pem"

        ## URL that the front-end will use to redirect the user to
        ## authenticate
        url = "https://my.domain.com/auth"

        ## How long a token from this provider is valid. If not
        ## specified, the value from default-token-ttl will be
        ## used.
        token-ttl = 1 day

        ## How long a certificate issued by this provider is valid.
        ## The timestamp in the certificate may be at most this old
        ## in order for a token to be created.
        cert-ttl = 5 minutes
      }
    }
  }

  services {
    ## How often the services manager should check for check for services
    ## that have not responsed within the timeout
    #check-ping-frequency = 2 seconds

    ## How long a service must go without responding to heartbeat messages
    ## before being considered offline.
    #timeout = 20s
  }

  key-escrow {
    ## Whether or not the key escrow subsystem is enabled
    #enabled = false

    ## The minimum number of recovery keys that must be generated and
    ## combined into the master key for the escrow request to be
    ## considered valid.
    ##
    ## This effectively means that there must be AT LEAST this many escrow
    ## groups configured for key escrow to be successful.
    #min-keys = 3

    ## Location of the signed site key.
    ## This is REQUIRED for the escrow subsystem to function.
    ## There is no default value for this setting, it MUST be set separately for
    ## each installation.
    #site-key-path = /etc/pki/ticrypt/site_key.json
  }

  security.xss {
    ## If enabled, if a suspected XSS attack is detected by the REST server,
    ## the session used in the request will be invalidated.
    #kill-session = true

    ## If enabled, if a suspected XSS attack is detected by the REST server,
    ## the account of the user performing the request will be locked.
    #lock-user = false

    ## If an account is locked due to a suspected XSS attack, the following
    ## message will be set as the reason for the account being inactive.
    #lock-user-reason = "Account locked due to suspected malicious activity"
  }

  mailboxes {
    ## Whether or not the mailbox subsystem is enabled
    #enabled = false
  }

  server-assisted-auth {
    ## Determines whether server-assisted authentication is available. If
    ## enabled, the IV and salts used to decrypt the user's private key can
    ## be stored on the server, and are only given to the user if they can
    ## provide valid MFA credentials.
    ##
    ## MFA must be enabled and configured with at least one extra factor for
    ## SAA to be enabled. If MFA is not properly configured, SAA will be
    ## disabled regardless of this setting.
    #enabled = false

    ## Determines whether server-assisted authentication is required for new
    ## accounts. Only takes effect if SAA is enabled.
    #required = true
  }

  ## Sets the host interface upon which the service listen for connections
  ## from the other services.
  #akka.remote.artery.canonical.hostname = "127.0.0.1"

  ## Sets the port used for remote connections to other services.
  #akka.remote.artery.canonical.port = 2552
}