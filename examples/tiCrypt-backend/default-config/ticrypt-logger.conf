#####################################
# ticrypt-logger Configuration File #
#####################################

ticrypt.logger {
	## This is where you can configure logging drivers. Drivers are named by
	## their keys in this config. Exactly one driver must have the property
	## `main = true`. If `main` is not specified, the manager assumes that the
	## driver is not the main driver. If no drivers are specified, this service
	## will crash.
	##
	## This main driver is used to set up the log. "Setting up" can either mean
	## initializing the secure log with a random hash, or reading what's already ## present and using that as the starting hash.
	##
	## Logging configurations can be dynamically reloaded by changing these
	## configurations and then sending SIGHUP to the logger service. One
	## important caveat is that drivers with the propery `immutable = true` will
	## not respond to config changes; i.e., they will not reload.
	##
	## The other config property that is common to all drivers is `type`. This
	## string tells the logging service which type of driver to use for this
	## driver. Example types are "file" and "tcp".
	##
	## Below are some example logging configurations:
	##
	## drivers {
	## 	main-file-logger {
	##		main = true
	##		immutable = true
	##		type = "file"
	##		log-file = "logs/ticrypt-secure-log.log" # where to read and write the logs to
	##	}
	##	tcp-logger1 {
	##		immutable = false
	##		main = false
	##		type = "tcp"
	##		host = "localhost" # which host to send logs to
	##		port = 25000 # which port to send logs to
	##		send-timeout = 30s # if a TCP message fails, how long should we wait for the message ack before we try to send the message again?
	##		retry-timeout = 5s # if the TCP connection fails, how long should we wait before trying to establish a new connection?
	##  }
	## }

	drivers {
		main-file-logger {
			main = true
			immutable = true
			type = "file"
			log-file = "/var/log/ticrypt/ticrypt-secure-log.log"
		}
	}

	## Whether or not to rotate the main log, and the frequency at which to rotate.
	#rotate-log = on
	#rotate-log-frequency = 1 day
	
	## Format for the suffix appended to rotated log files. Based on the time
	## at which the log was rotated.
	##
	## Should be a joda datetime format string
	## See: http://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html
	#rotate-log-suffix-format = "'-'yyyyMMdd'T'HHmmss"

	## Set to null to use the default system timezone. If you do this, it
	## is recommended to add a timezone component to the suffix format
	#rotate-log-suffix-timezone = "UTC"
	
	## Maximum number of lines to buffer before writing out to file
	#max-buffered-lines = 10

	## Sets the host interface upon which the service listen for connections
	## from the other services. 
	#akka.remote.artery.canonical.hostname = "127.0.0.1"

	## Sets the port used for remote connections to other services.
	#akka.remote.artery.canonical.port = 2559

}

ticrypt.auth {
	## Sets the hostname, and port used by the Authentication
	## service. Must be set properly for proper communcation with the
	## authentication service.
	#hostname = "127.0.0.1"
	#port = 2552
}